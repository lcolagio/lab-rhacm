## SCC ##
oc create -f - <<EOF

kind: SecurityContextConstraints
metadata:
  creationTimestamp: null
  name: mssql-persistent-scc
  selfLink: /apis/security.openshift.io/v1/securitycontextconstraints/mssql-persistent-scc
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegeEscalation: true
allowPrivilegedContainer: true
allowedCapabilities: null
apiVersion: security.openshift.io/v1
defaultAddCapabilities: null
fsGroup:
  type: RunAsAny
groups: []
priority: null
readOnlyRootFilesystem: false
requiredDropCapabilities: null
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- system:admin
- system:serviceaccount:mssql-persistent:mssql-persistent-sa
volumes:
- awsElasticBlockStore
- azureDisk
- azureFile
- cephFS
- cinder
- configMap
- downwardAPI
- emptyDir
- fc
- flexVolume
- flocker
- gcePersistentDisk
- gitRepo
- glusterfs
- iscsi
- nfs
- persistentVolumeClaim
- photonPersistentDisk
- portworxVolume
- projected
- quobyte
- rbd
- scaleIO
- secret
- storageOS
- vsphere

EOF

## NS, SECRET, SA, PVC  ##
oc create -f - <<EOF

---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: mssql-persistent

--- 
kind: Secret
apiVersion: v1
metadata:
  name: mssql-secret
  namespace: mssql-persistent
  labels:
    app: mssql-container
data:
  mssql-password: UEBzc3cwcmQxIQ==
type: Opaque

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: mssql-persistent-sa
  namespace: mssql-persistent
  labels:
    component: mssql-persistent

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: mssql-persistent-sa
  namespace: mssql-persistent
  labels:
    component: mssql-persistent
secrets:
  - name: mssql-persistent-sa-dockercfg-knz8c
  - name: mssql-persistent-sa-token-zbmcs
imagePullSecrets:
  - name: mssql-persistent-sa-dockercfg-knz8c

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mssql-pvc
  namespace: mssql-persistent
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2
  volumeMode: Filesystem
  
EOF

### MSQL SERVER ###
oc create -f - <<EOF

---
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: mssql-deployment
  namespace: mssql-persistent
  labels:
    app: mssql-container
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: mssql-container
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mssql-container
        name: mssql-container
    spec:
      restartPolicy: Always
      serviceAccountName: mssql-persistent-sa
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              cpu: '2'
              memory: 3Gi
            requests:
              cpu: '2'
              memory: 3Gi
          terminationMessagePath: /dev/termination-log
          name: mssql-container
          env:
            - name: ACCEPT_EULA
              value: 'Y'
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-secret
                  key: mssql-password
          securityContext:
            privileged: true
          ports:
            - containerPort: 1433
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: mssql-vol
              mountPath: /var/opt/mssql/data
          terminationMessagePolicy: File
          image: 'quay.io/ocpmigrate/mssql-server:latest'
      serviceAccount: mssql-persistent-sa
      volumes:
        - name: mssql-vol
          persistentVolumeClaim:
            claimName: mssql-pvc
      dnsPolicy: ClusterFirst

EOF

### APP ###

oc create -f - <<EOF

kind: Deployment
apiVersion: apps/v1
metadata:
  name: mssql-app-deployment
  namespace: mssql-persistent
  labels:
    app: mssql-container-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql-container-app
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mssql-container-app
    spec:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: mssql-container-app
          env:
            - name: ConnString
              value: >-
                Server=mssql-service.mssql-persistent.svc.cluster.local;Database=ProductCatalog;User
                ID=WebLogin; password=SQLPass1234!
          securityContext:
            privileged: true
          ports:
            - containerPort: 5000
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: 'quay.io/ocpmigrate/mssql-sample-app:microsoft'
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      serviceAccountName: mssql-persistent-sa
      serviceAccount: mssql-persistent-sa
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 2
  progressDeadlineSeconds: 600

EOF

oc create -f - <<EOF

---
kind: Service
apiVersion: v1
metadata:
  name: mssql-app-service
  namespace: mssql-persistent
spec:
  ports:
    - name: tcp
      protocol: TCP
      port: 5000
      targetPort: 5000
  selector:
    app: mssql-container-app
#  clusterIP: 172.30.179.168
  type: ClusterIP
  sessionAffinity: None
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: mssql-app-route
  namespace: mssql-persistent
spec:
#  host: mssql-app-route-mssql-persistent.apps.d751.example.opentlc.com
  path: /
  to:
    kind: Service
    name: mssql-app-service
    weight: 100
  wildcardPolicy: None

EOF


oc create -f - <<EOF

kind: Service
apiVersion: v1
metadata:
  name: mssql-service
  namespace: mssql-persistent
spec:
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
      nodePort: 32001
  selector:
    app: mssql-container
  clusterIP: 172.30.185.173
  type: LoadBalancer  
  externalIPs:
    - 172.29.112.233
  sessionAffinity: None
  externalTrafficPolicy: Cluster

EOF